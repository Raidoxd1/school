import os
import sys
from Crypto.Cipher import AES

def unpad(s):
    # Remove the padding from the given string
    return s.rstrip(b"\0")

def decrypt_file(key, filename):
    encrypted_filename = filename 
    with open(encrypted_filename, "rb") as file:
        ciphertext = file.read()
    iv = ciphertext[:AES.block_size]
    ciphertext = ciphertext[AES.block_size:]
    # Create the AES cipher object with CBC mode
    cipher = AES.new(key, AES.MODE_CBC, iv)
    padded_plaintext = cipher.decrypt(ciphertext)
    plaintext = unpad(padded_plaintext)
    decrypted_filename = filename.rsplit(".", maxsplit=1)[0]  # Remove the ".encrypted" extension
    with open(decrypted_filename, "wb") as file:
        file.write(plaintext)

    os.remove(encrypted_filename)
    print(f"File '{filename}' decrypted successfully.")

def decrypt_directory(key, directory_path):
    for root, dirs, files in os.walk(directory_path):
        for file in files:
            if file.endswith(".haha"):
                file_path = os.path.join(root, file)
                decrypt_file(key, file_path)

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print("Usage: python decrypt.py <key>")
        sys.exit(1)
        
    directory_path = r"C:\Users\k\Desktop\school\random files"
    key = sys.argv[1].encode()  # Convert the key from string to bytes
    decrypt_directory(key, directory_path)
